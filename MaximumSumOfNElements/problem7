import java.util.Scanner;

public class Main {

    static void print2DArray(int[][] a) {
        for (int i = 0; i < a.length; i++) {
            for (int j = 0; j < a[0].length; j++) {
                if (j != 0) {
                    System.out.print(" ");
                }
                System.out.print(a[i][j]);
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n, m;
        n = sc.nextInt();
        m = sc.nextInt();
        int[][] a = new int[n][m];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                a[i][j] = sc.nextInt();
            }
        }

        // ここにコードを書く

        // 累積和を格納する二次元配列 s を元の配列 a と同じ n x m のサイズで初期化
        int[][] s = new int[n][m];

        // 累積和を計算
        // 1. s[0][0] を初期化
        s[0][0] = a[0][0];

        // 2. 最初の行を計算 (s[0][j])
        for (int j = 1; j < m; j++) {
            s[0][j] = s[0][j-1] + a[0][j];
        }

        // 3. 最初の列を計算 (s[i][0])
        for (int i = 1; i < n; i++) {
            s[i][0] = s[i-1][0] + a[i][0];
        }

        // 4. 残りの部分 (s[i][j] for i > 0 and j > 0) を計算
        // s[i][j] = s[i-1][j] + s[i][j-1] - s[i-1][j-1] + a[i][j]
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < m; j++) {
                s[i][j] = s[i-1][j] + s[i][j-1] - s[i-1][j-1] + a[i][j];
            }
        }

        // 計算した二次元累積和配列 s を出力
        print2DArray(s);

        sc.close(); // Scannerを閉じる
    }
}