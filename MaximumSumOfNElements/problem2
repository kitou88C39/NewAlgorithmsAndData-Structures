import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n, k;
        n = sc.nextInt();
        k = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        // ここにコードを書く

        // 1. 累積和配列 s を作成
        // s[0] = 0;
        // s[i] = a[0] + ... + a[i-1]
        int[] s = new int[n + 1];
        s[0] = 0; // 先頭0個の和は0

        for (int i = 0; i < n; i++) {
            s[i+1] = s[i] + a[i];
        }

        // 2. 暫定最大値を格納する変数 maxSum を初期化
        // 最初のk個の要素の和 (s[k] - s[0]) で初期化するのが安全
        int maxSum = s[k] - s[0];

        // 3. 累積和配列を使って、連続する k 個の要素の和の最大値を探索
        // ウィンドウの開始インデックス `i` は 0 から `n - k` まで
        // (これにより、s[i+k] のインデックスが最大 n までになる)
        for (int i = 1; i <= n - k; i++) { // i はウィンドウの開始インデックス
            // 現在のウィンドウの和を累積和を使って計算: sum(a[i]...a[i+k-1]) = s[i+k] - s[i]
            int currentWindowSum = s[i+k] - s[i];

            // maxSum を更新
            if (currentWindowSum > maxSum) {
                maxSum = currentWindowSum;
            }
        }

        // 4. 結果を出力
        System.out.println(maxSum);

        sc.close(); // Scannerを閉じる
    }
}