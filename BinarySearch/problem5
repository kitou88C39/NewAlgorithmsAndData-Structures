import java.util.Scanner;
import java.util.Arrays;

public class Main {

    static int lowerBound(int[] a, int n, int x) {
        int left = 0, right = n;
        while (left != right) {
            int mid = (left + right) / 2;
            if (a[mid] >= x) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return left;
    }

    static int upperBound(int[] a, int n, int y) {
        int left = 0, right = n;
        while (left != right) {
            int mid = (left + right) / 2;
            if (a[mid] > y) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return left;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        Arrays.sort(a);

        int q = sc.nextInt();

        int[] l = new int[q], r = new int[q];
        for (int i = 0; i < q; i++) {
            l[i] = sc.nextInt();
            r[i] = sc.nextInt();

            int countLessEqualL = lowerBound(a, n, l[i] + 1);   // l[i] 以下の個数
            int countGreaterEqualR = n - upperBound(a, n, r[i]); // r[i] 以上の個数

            System.out.println(countLessEqualL + countGreaterEqualR);
        }

        sc.close();
    }
}
