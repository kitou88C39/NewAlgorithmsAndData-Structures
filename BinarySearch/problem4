import java.util.Scanner;
import java.util.Arrays;

public class Main {

    static int lowerBound(int[] a, int n, int x) {

        int left = 0, right = n;

        while (left != right) {
            int mid = (left + right) / 2;

            if (a[mid] >= x) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }

        return left;
    }

    // 関数 upperBound(a, n, y) を定義
    int upperBound(int[]a, int n, int y){

    // 変数 left, right をそれぞれ 0 と n で初期化
    int left = 0, right = n;
    
    // left と right が一致しない間
    while (left != right){

    // 変数 mid に (left + right) / 2 を代入
    int mid = (left + right) / 2;

    // もし a[mid] が y より大きいなら
    if (a[mid] > y){

    // right を mid で更新
    right = mid;
    
    // そうでなければ
    } else {

    // left を mid + 1 で更新
    left = mid + 1;
    }

    }

    }
    // left を返す
    return left;
    }





    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }

        // 配列 a を昇順にソート

        int q = sc.nextInt();

        int[] l = new int[q], r = new int[q];
        for (int i = 0; i < q; i++) {
            l[i] = sc.nextInt();
            r[i] = sc.nextInt();

            // upperBound(a, n, r[i]) - lowerBound(a, n, l[i]) を出力
        }
    }
}
